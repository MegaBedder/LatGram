global funcion configurar_grupo()
   si config.grupos[0].permitidos
      shash = "ajustes:"..msg.chat.id
      desde (i=0; i<config.grupos[0].permitidos; i++)
         redis.sagregar(com, shash, config.grupos[0].permitidos[i])
         imprimir("Configurando "..config.grupos[0].permitidos[i].."...")
      fin
   fin
fin

global funcion desconfigurar_grupo()
   redis.borrar(com, "ajustes:"..msg.chat.id..":customs")
   redis.borrar(com, "ajustes:"..msg.chat.id)
   redis.borrar(com, "extras:"..msg.chat.id)
   redis.borrar(com, "extras:"..msg.chat.id..":customs")
fin

global funcion usuario_hace_spam()
   si msg.chat.tipo != "private"
      spam_match = falso
      spam_match_texto = cadena.match(msg.texto, "@[a-Z_0-9]+")
      spam_match_capcion = cadena.match(msg.capcion, "@[a-Z_0-9]+")
      si spam_match_texto
         spam_match = spam_match_texto
      osi spam_match_capcion
         spam_match = spam_match_capcion
      fin
      si spam_match
         desde(i=0;i<spam_match;i++)
            es_chat = obtenerChat(spam_match[i][0])
            si es_chat
               retornar verdadero
            fin
         fin
      osi msg.reenviado.chat.id
         retornar verdadero
      fin
   fin
   retornar falso
fin

global funcion nuevo_usuario()
   bienvenida_custom = redis.hobtener(com, "ajustes:"..msg.chat.id..":customs", "bienvenida")
   si msg.agregado.id
      nombre_usuario = msg.agregado.usuario
      si ! nombre_usuario
         nombre_usuario = "(sin usuario)"
      fin
      si bienvenida_custom
         mensaje = cadena.reemplazar(bienvenida_custom, "$usuario", nombre_usuario)
         mensaje = cadena.reemplazar(mensaje, "$id", acadena(msg.agregado.id))
         mensaje = cadena.reemplazar(mensaje, "$nombre", msg.agregado.nombre)
         mensaje = cadena.reemplazar(mensaje, "$titulo", msg.chat.titulo)
      sino
         mensaje = "Bienvenido "..no_markdown(msg.agregado.nombre).." a "..no_markdown(msg.chat.titulo)
      fin
      retornar mensaje
   fin
   retornar falso
fin


global funcion comando_personalizado()
   hash = "extras:"..msg.chat.id..":customs"
   comando_nuevo = redis.hobtener(com, hash, msg.texto)
   si comando_nuevo
      retornar comando_nuevo
   fin
   retornar falso
fin

global funcion subproceso_papelera()
   array = obtenerLeer(msg.de.id, msg.texto, 22)
   si array
      si cadena.match(cadena.minusculas(msg.texto), "^(s|si)$")
         redis.borrar(com, "extras:"..msg.de.id..":portapapeles")
         enviarMensaje(msg.chat.id, "*Papelera vaciada*.", md)
         detenerLeer(msg.de.id, 22)
      sino
         enviarMensaje(msg.chat.id, "*Proceso abortado*.", md)
         detenerLeer(msg.de.id, 22)
      fin
      retornar verdadero
   fin
   retornar falso
fin

global funcion flood(id, max_mensajes, max_tiempo)
   si id
      hash = "tmp:"..id..":flood"
      tiempo = redis.tiempo(com, hash)
      si tiempo
         a = redis.aumentar(com, hash)
         si a > max_mensajes
            redis.borrar(com, hash)
            retornar verdadero
         fin
      sino
         redis.setex(com, hash, "0", max_tiempo)
      fin
   fin
   retornar falso
fin

global funcion arabe_detectado(cad)
   si cadena.match(cad, "[ء-ي]+")
      retornar verdadero
   fin
   retornar falso
fin

funcion subproceso()

   /*    funcion usuario_ingresa_link()
   si msg.chat.tipo != "private"
   cadena.match(msg.texto, "https?://[a-Z_-%.%?%.:/%+=&]+")*/

   si msg.chat.tipo == "private"
      si msg.de.usuario
         registrar_id_usuario(msg.de.usuario, msg.de.id)
      fin
      retornar 0
   fin
   AHASH = "ajustes:"..msg.chat.id
   CHASH = "ajustes:"..msg.chat.id..":customs"

   si msg.de.id
      si msg.de.usuario registrar_id_usuario(msg.de.usuario, msg.de.id) fin
      si !usuario_es_admin(msg.chat.id, msg.de.id) && !es_creador(msg.de.id) && !es_gadmin(msg.de.id) && !es_gmod(msg.de.id) && !es_mod(msg.chat.id, msg.de.id)
         retornar 0
      osi redis.sesmiembro(com, AHASH, "flood")
         retornar 0
      fin
      tim = redis.hobtener(com, CHASH, "maxfloodm")
      tit = redis.hobtener(com, CHASH, "maxfloodt")
      max_mensajes = config.grupos[0].max_mensajes_flood
      max_tiempo = config.grupos[0].max_tiempo_flood
      si tim
         max_mensajes = tim
      fin
      si tit
         max_tiempo = tit
      fin
      flood_ = flood(msg.de.id, anumero(max_mensajes), anumero(max_tiempo))
      si flood_
         ban = banearUsuario(msg.chat.id, msg.de.id)
         si ban
            enviarMensaje(msg.chat.id, "El miembro "..no_markdown(msg.de.nombre).." *ha sido baneado por flood*.", md)
         fin
      fin
   fin

   si bot_eliminado()
      desconfigurar_grupo()
      redis.sborrar(com, BOT_SHASH, acadena(msg.chat.id))
      retornar "Bot eliminado de "..msg.chat.titulo
   fin

   si subproceso_papelera()
      retornar "Opción de portapapeles de "..msg.de.nombre..": "..msg.texto
   fin

   si bot_agregado()
      configurar_grupo()
      enviarMensaje(msg.chat.id, "¡Hola! soy "..bot.nombre..", gracias por añadirme a este chat.")
      redis.sagregar(com, BOT_SHASH, acadena(msg.chat.id))
      retornar "Bot añadido a "..msg.chat.titulo
   fin

   si comando_personalizado()
      es_miembro = redis.sesmiembro(com, AHASH, "extras")
      si es_miembro
         enviarMensaje(msg.chat.id, comando_personalizado(), md)
         retornar "comando personalizado ejecutado ("..msg.texto..")"
      fin
   fin

   si arabe_detectado(msg.agregado.nombre)
      es_miembro = !redis.sesmiembro(com, AHASH, "arabes")
      si es_miembro
         banearUsuario(msg.chat.id, msg.agregado.id)
         retornar "ALLAHU AKBAR "..msg.agregado.id
      fin
   fin

   si arabe_detectado(msg.agregado.apellido)
      es_miembro = !redis.sesmiembro(com, AHASH, "arabes")
      si es_miembro
         banearUsuario(msg.chat.id, msg.agregado.id)
         retornar "allahu akbar "..msg.agregado.id
      fin
   fin

   si nuevo_usuario()
      si msg.agregado.usuario
         registrar_id_usuario(msg.agregado.usuario, msg.agregado.id)
      fin
      es_miembro = redis.sesmiembro(com, AHASH, "bienvenida")
      si es_miembro
         enviarMensaje(msg.chat.id, nuevo_usuario(), md)
         retornar "Nuevo miembro en "..msg.chat.titulo.."\nMiembro: "..msg.agregado.nombre.." ("..msg.agregado.id..")"
      fin
   fin

   si usuario_hace_spam()
      es_miembro = !redis.sesmiembro(com, AHASH, "spam")
      si es_miembro
         accion = banearUsuario(msg.chat.id, msg.de.id)
         si !accion
            retornar "spam en chat en "..msg.chat.titulo.."\nDe: "..msg.de.nombre.."\nId: "..msg.de.id.."\nMensaje: "..msg.texto.."\nEstado: sin expulsar"
         fin
         enviarMensaje(msg.chat.id, no_markdown(msg.de.nombre).." *baneado por spam*.", md)
         retornar "spam en chat en "..msg.chat.titulo.."\nDe: "..msg.de.nombre.."\nId: "..msg.de.id.."\nMensaje: "..msg.texto.."\nEstado: expulsado"
      fin
      retornar falso
   fin

fin

retornar {
   "subproceso": subproceso
}
