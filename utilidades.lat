funcion no_markdown(texto, reemplazo)
        si ! reemplazo
                texto = cadena->reemplazar(texto, "*", "")
                texto = cadena->reemplazar(texto, "_", "")
                texto = cadena->reemplazar(texto, "`", "")
        sino
                texto = cadena->reemplazar(texto, "*", reemplazo)
                texto = cadena->reemplazar(texto, "_", reemplazo)
                texto = cadena->reemplazar(texto, "`", reemplazo)
        fin
        retornar texto
fin

funcion cod(texto)
        x = cadena->reemplazar(texto, "\\n", "\n")
        retornar curl->escape(x)
fin

funcion usuario_es_admin(chatId, userId)
        res = curl->peticion(URL . "getChatAdministrators?chat_id=".chatId)
        j = json->decodificar(res)
        desde (i=0; i<lista->longitud(j->result);i++)
                si j->result[i]->user->id == userId
                        retornar verdadero
                fin
        fin
        retornar falso
fin

funcion ires()
        si res
                imprimir(sistema->pipe("echo '".res."' | jq -r '.'"))
                retornar verdadero
        fin
        imprimir("Variable res no encontrada", 1)
        retornar falso
fin

funcion cargar_plugins()
        plugins = []
        desde (o=0; o<(config->plugins); o++)
                plugin = incluir(config->dir.config->plugins[o])
                lista->agregar(plugins, plugin)
        fin
        retornar plugins
fin

funcion parsear(teclado_inline)
        inline = []
        desde (i=0;i<lista->longitud(teclado_inline);i++)
                lista->agregar(inline, teclado_inline[i])
        fin
        retornar curl->escape('{"inline_keyboard":'.inline."}")
fin
